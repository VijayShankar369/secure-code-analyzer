# PHP Security Rules for Secure Code Analyzer

rules:
  - id: php-sql-injection-concat
    title: "SQL Injection via String Concatenation"
    languages: 
      - php
    severity: high
    confidence: high
    cwe: CWE-89
    owasp: "A03:2021 - Injection"
    message: "Potential SQL injection vulnerability detected. User input is directly concatenated into SQL query."
    remediation: "Use prepared statements with parameter binding instead of string concatenation."
    pattern:
      - contains: "$_GET"
      - contains: "$_POST"
    examples:
      positive:
        - '$query = "SELECT * FROM users WHERE id = " . $_GET["id"];'
      negative:
        - '$stmt = $pdo->prepare("SELECT * FROM users WHERE id = ?");'

  - id: php-xss-echo-get
    title: "Cross-Site Scripting (XSS) via Echo"
    languages: 
      - php
    severity: medium
    confidence: high
    cwe: CWE-79
    owasp: "A07:2021 - XSS"
    message: "Potential XSS vulnerability. User input echoed without sanitization."
    remediation: "Use htmlspecialchars() or htmlentities() to encode output."
    pattern:
      - contains: "echo $_GET"
      - contains: "echo $_POST"
    examples:
      positive:
        - 'echo $_GET["message"];'
      negative:
        - 'echo htmlspecialchars($_GET["message"], ENT_QUOTES, "UTF-8");'

  - id: php-file-inclusion-lfi
    title: "Local File Inclusion (LFI) Vulnerability"
    languages: 
      - php
    severity: high
    confidence: high
    cwe: CWE-22
    owasp: "A01:2021 - Broken Access Control"
    message: "Potential Local File Inclusion vulnerability."
    remediation: "Validate and sanitize file paths. Use a whitelist of allowed files."
    pattern:
      - contains: "include("
      - contains: "require("
    examples:
      positive:
        - 'include($_GET["page"]);'
      negative:
        - 'if (in_array($_GET["page"], $allowed)) include($_GET["page"]);'

  - id: php-command-injection
    title: "Command Injection Vulnerability"
    languages: 
      - php
    severity: critical
    confidence: high
    cwe: CWE-78
    owasp: "A03:2021 - Injection"
    message: "Command injection vulnerability detected."
    remediation: "Never pass user input directly to system commands."
    pattern:
      - contains: "exec("
      - contains: "system("
      - contains: "shell_exec("
    examples:
      positive:
        - 'exec($_GET["cmd"]);'
      negative:
        - 'exec(escapeshellarg($_GET["cmd"]));'

  - id: php-weak-crypto-md5
    title: "Weak Cryptographic Hash (MD5)"
    languages: 
      - php
    severity: medium
    confidence: high
    cwe: CWE-327
    owasp: "A02:2021 - Cryptographic Failures"
    message: "MD5 is cryptographically broken."
    remediation: "Use password_hash() for passwords or stronger algorithms."
    pattern:
      - contains: "md5("
    examples:
      positive:
        - '$hash = md5($password);'
      negative:
        - '$hash = password_hash($password, PASSWORD_DEFAULT);'
